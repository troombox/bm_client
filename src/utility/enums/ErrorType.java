package utility.enums;

public enum ErrorType {

	INVALID_CREDENTIALS_WRONG_PASSWORD("INVALID_CREDENTIALS_WRONG_PASSWORD"),
	INVALID_CREDENTIALS_USER_NOT_FOUND("INVALID_CREDENTIALS_USER_NOT_FOUND"),
	INVALID_CREDENTIALS_USER_ALREADY_LOGGED_IN("INVALID_CREDENTIALS_USER_ALREADY_LOGGED_IN"),
	INVALID_W4_VALUE_NOT_FOUND("INVALID_W4_VALUE_NOT_FOUND"),
	INVALID_CREDENTIALS_RESTAURANT_NOT_FOUND("INVALID_CREDENTIALS_RESTAURANT_NOT_FOUND"),
	CLIENT_ALREADY_EXIST("CLIENT_ALREADY_EXIST"),
	BUSINESS_DOESNT_EXIST("BUSINESS_DOESNT_EXIST"),
	BUSINESS_NOT_APPROVE("BUSINESS_NOT_APPROVE"),
	WORKER_DOSENT_EXIST("WORKER_DOSENT_EXIST"),
	NO_CLIENTS_IN_THIS_BRANCH("NO_CLIENTS_IN_THIS_BRANCH"),
	WORKER_DOSENT_RESTAURANT_OWNER("WORKER_DOSENT_RESTAURANT_OWNER"),
	DISHES_NOT_FOUND("DISHES_NOT_FOUND"),
	BUSINESS_CLIENT_DATA_NOT_FOUND("BUSINESS_CLIENT_DATA_NOT_FOUND"),
	SUPPLIER_ALREADY_EXIST("SUPPLIER_ALREADY_EXIST"),
	REPORT_NOT_EXIST("REPORT_NOT_EXIST"),
	ERROR_CREATING_REPORT("ERROR_CREATING_REPORT"),
	FILE_ALREADY_OPEN("FILE_ALREADY_OPEN"),
	COULD_NOT_UPDATE_BUSINESS_CLIENT("COULD_NOT_UPDATE_BUSINESS_CLIENT"),
	COULD_NOT_UPDATE_ORDER("COULD_NOT_UPDATE_ORDER"),
	COULD_NOT_CANCEL_ORDER("COULD_NOT_CANCEL_ORDER"),
	USER_ACCOUNT_IS_FROZEN("USER_ACCOUNT_IS_FROZEN"),
	USER_IS_UNREGISTERED("USER_IS_UNREGISTERED"),
	UNKNOWN("UNKNOWN_ERROR_TYPE");																//used internally, should not be sent as a type
	
	private String errorType;
	
	private ErrorType(String errorType) {
		this.errorType = errorType;
	}
	
	@Override
	public String toString() {
		return errorType;
	}
	
	public static ErrorType fromString(String errorTypeString) {
		switch(errorTypeString) {
		case "INVALID_CREDENTIALS_WRONG_PASSWORD":
			return ErrorType.INVALID_CREDENTIALS_WRONG_PASSWORD;
		case "INVALID_CREDENTIALS_USER_NOT_FOUND":
			return ErrorType.INVALID_CREDENTIALS_USER_NOT_FOUND;
		case "INVALID_CREDENTIALS_USER_ALREADY_LOGGED_IN":
			return ErrorType.INVALID_CREDENTIALS_USER_ALREADY_LOGGED_IN;
		case "INVALID_W4_VALUE_NOT_FOUND":
			return ErrorType.INVALID_W4_VALUE_NOT_FOUND;
		case "CLIENT_ALREADY_EXIST":
			return ErrorType.CLIENT_ALREADY_EXIST;
		case "BUSINESS_NOT_APPROVE":
			return BUSINESS_NOT_APPROVE;
		case "BUSINESS_DOESNT_EXIST":
			return BUSINESS_DOESNT_EXIST;
		case "NO_CLIENTS_IN_THIS_BRANCH":
			return ErrorType.NO_CLIENTS_IN_THIS_BRANCH;
		case "WORKER_DOSENT_EXIST":
			return WORKER_DOSENT_EXIST;
		case "WORKER_DOSENT_RESTAURANT_OWNER":
			return WORKER_DOSENT_RESTAURANT_OWNER;
		case "INVALID_CREDENTIALS_RESTAURANT_NOT_FOUND":
			return ErrorType.INVALID_CREDENTIALS_RESTAURANT_NOT_FOUND;
		case "DISHES_NOT_FOUND":
			return ErrorType.DISHES_NOT_FOUND;
		case "BUSINESS_CLIENT_DATA_NOT_FOUND":
			return ErrorType.BUSINESS_CLIENT_DATA_NOT_FOUND;
		case "SUPPLIER_ALREADY_EXIST":
			return ErrorType.SUPPLIER_ALREADY_EXIST;
		case "REPORT_NOT_EXIST":
			return ErrorType.REPORT_NOT_EXIST;
		case "ERROR_CREATING_REPORT":
			return ErrorType.ERROR_CREATING_REPORT;
		case "FILE_ALREADY_OPEN":
			return ErrorType.FILE_ALREADY_OPEN;
		case "COULD_NOT_UPDATE_BUSINESS_CLIENT":
			return ErrorType.COULD_NOT_UPDATE_BUSINESS_CLIENT;
		case "COULD_NOT_UPDATE_ORDER":
			return ErrorType.COULD_NOT_UPDATE_ORDER;
		case "COULD_NOT_CANCEL_ORDER":
			return ErrorType.COULD_NOT_CANCEL_ORDER;
		default:
			return ErrorType.UNKNOWN;
		}
	}
}
